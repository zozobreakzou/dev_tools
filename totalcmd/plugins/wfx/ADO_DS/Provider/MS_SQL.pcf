#   This is the provider configuration file for MS SQL Server 2000.
#   All lines starting with symbol # are comments.
#
#   !!!!!!         WARNING: This file may contain errors.            !!!!!!!!
#   !!!!!!  If you find some, please, corect them and send corrected !!!!!!!!
#   !!!!!!  file to author's address: sqlplugin<at_sign>gmail.com.   !!!!!!!!

Provider=MS SQL Server 2000
Author=Oleg Yuvashev

#   Parameter ContinueSymbol defines character that is used to enter long
#   string for some parameter.
#   If the last symbol of some line in this file (exclude comment lines)
#   is ContinueSymbol, this symbol is deleted from the line and then this line
#   is concatenated with left trimmed next line.
#   Then above procedure continues with resulting line.
ContinueSymbol=>

#   Parameter MultiLineSymbol defines character that is used to enter
#   multi-line string for some parameter.
#   It works like ContinueSymbol except the symbol itself is not deleted
#   but substituted with new line symbols (0x0D, 0x0A).
MultiLineSymbol=~

#   Parameter MaxRegularIdentifierSize sets maximal acceptable size for regular
#   object name. If the size of some object name exceeds this value, this name
#   is treated as irregular and must be delimited with provider-specific symbols.
#   Value 0 means no limitations for the size of object name.
MaxRegularIdentifierSize=0

#   FirstIdChars is a set of characters, which are available as first identifier
#   character. If first character of some object name in your database is out
#   of this set, this object name is treated as irregular and must be delimited
#   with provider-specific symbols.
FirstIdChars=#,@,A..Z,_,a..z

#   NextIdChars is a set of characters, which are available as non-first identifier
#   characters. If some object name character is out of this set, this object name
#   is treated as irregular and must be delimited with provider-specific symbols.
NextIdChars=#,$,0..9,@,A..Z,_,a..z

#   ReservedWords is a comma-separated list of words that are reserved in current
#   database server. If some object name coincides with one of these words, it is
#   treated as irregular and must be delimited with provider-specific symbols.
#
#   If this list is empty in the specific configuration file, default list
#   from the file "Default.pcf" is used.
#   Also use parameters ResWordsIncluded and ResWordsExcluded, described below.
ReservedWords=

#   ResWordsIncluded is a comma-separated list of words, which are added to the
#   reserved word list.
#
#   This is the list of MS SQL reserved words, in addition to ANSI list defined
#   in the file "Default.pcf".
#   Source:
#     MS SQL Server 2000, Online Help, section "Reserved Keywords"
ResWordsIncluded=
    AUTHORIZATION,BACKUP,BEGIN,BREAK,BROWSE,BULK,CASCADE,CASE,CHECKPOINT,>
    CLOSE,CLUSTERED,COALESCE,COLLATE,COLUMN,COMMIT,COMPUTE,CONSTRAINT,>
    CONTAINS,CONTAINSTABLE,CONTINUE,CONVERT,CROSS,CURRENT_DATE,CURRENT_TIME,>
    CURRENT_TIMESTAMP,CURRENT_USER,CURSOR,DATABASE,DBCC,DEALLOCATE,>
    DECLARE,DENY,DISK,DISTRIBUTED,DOUBLE,DUMMY,DUMP,END,ERRLVL,ESCAPE,>
    EXCEPT,EXEC,EXECUTE,EXISTS,EXIT,FETCH,FILE,FILLFACTOR,FOREIGN,FREETEXT,>
    FREETEXTTABLE,FULL,FUNCTION,GOTO,HOLDLOCK,IDENTITY,IDENTITY_INSERT,>
    IDENTITYCOL,INDEX,INNER,JOIN,KEY,KILL,LEFT,LINENO,LOAD,NATIONAL,NOCHECK,>
    NONCLUSTERED,NULLIF,OFF,OFFSETS,OPEN,OPENDATASOURCE,OPENQUERY,OPENROWSET,>
    OPENXML,OUTER,OVER,PERCENT,PLAN,PRECISION,PRIMARY,PRINT,PROC,PROCEDURE,>
    RAISERROR,READ,READTEXT,RECONFIGURE,REFERENCES,REPLICATION,RESTORE,>
    RESTRICT,RETURN,RIGHT,ROLLBACK,ROWCOUNT,ROWGUIDCOL,RULE,SAVE,SCHEMA,>
    SESSION_USER,SETUSER,SHUTDOWN,SOME,STATISTICS,SYSTEM_USER,TEXTSIZE,TOP,>
    TRAN,TRANSACTION,TRIGGER,TRUNCATE,TSEQUAL,UPDATETEXT,USE,VARYING,WAITFOR,>
    WHEN,WHILE,WRITETEXT

#   ResWordsExcluded is a comma-separated list of words, which are excluded from
#   the reserved word list.
ResWordsExcluded=CHAR,CONNECT,DATE,DECIMAL,FLOAT,IMMEDIATE,INTEGER,LEVEL,>
    PRIOR,PRIVILEGES,ROWS,SESSION,SIZE,SMALLINT,VARCHAR,WHENEVER

#   Parameter ReadMultipleRecordsets allows plugin to treat each query as it
#   returns multiple recordsets. Therefore plugin will try to read as many
#   recordsets as possible. Some DB Providers don't allow multiple recordsets,
#   and can generate error message.
#   Just set ReadMultipleRecordsets to zero in this case.
ReadMultipleRecordsets=1

#   Next two parameters allow to show/hide (values 1/0) Catalog and Object Group
#   levels in plugin hierarchy on Total Commander panel
ShowCatalogLevel=1
ShowObjGroupLevel=1

#   Next group of parameters describes delimiters used for irregular identifiers
#   and groups of database objects for which delimiters are used.
DelimiterStart=[
DelimiterEnd=]
UseDelimitersForCatalog=1
UseDelimitersForObjectName=1
UseDelimitersForSchema=1

#   Next two parameters give formats for combining schema name with object name
#   in Total Commander plugin panel (object level - tables, views, SP, UDF)
#   and in QueryViewer window.
#
#   You can use following macros for substitution:
#       %s  -  for schema name;
#       %n  -  for object name;
#       [ , ]  -  for mandatory delimiters;
#       < , >  -  for optional delimiters (for irregular object names only)
#
#   For example, if you have tables "MyTable" and "Insert" (reserved word !!!)
#   for scheme "ABC", you results will be:
#
#               |   Use*    |            |
#       Format  |delimiters |Delimiters**|         Results
#    -----------|-----------|------------|-----------------------------------
#       %s.%n   |   1 1     |   X , X    |  ABC.MyTable   ,   ABC.Insert
#     <%n>.<%s> |   1 1     |   [ , ]    |  MyTable.ABC   , [Insert].ABC
#     <%s>.<%n> |   1 1     |   " , "    |  ABC.MyTable   ,   ABC."Insert"
#     [%s].<%n> |   1 1     |   [ , ]    | [ABC].MyTable  , [ABC].[Insert]
#     [%s].[%n] |   1 1     |   { , }    | {ABC}.{MyTable}, {ABC}.{Insert}
#     [%s].[%n] |   1 0     |   " , "    |  ABC."MyTable" ,   ABC."Insert"
#     [%s].[%n] |   0 0     |   X , X    |  ABC.MyTable   ,   ABC.Insert
#
#   However, be careful with formats, because:
#     [%s].[%u] |   1 1     |   { , }    | {ABC}.[%u]     , {ABC}.[%u]      - %u is not substituted
#     [%s>.[%n] |   1 1     |   { , }    | [%s>.{MyTable} ,  [%s>.{Insert}  - unpaired delimiters
#
#    *  - from parameters UseDelimitersForObjectName and UseDelimitersForSchema
#    ** - from parameter DelimiterSymbols, X means any value
#
ObjectTCPanelFormat=<%n>.<%s>
ObjectQueryViewerFormat=[%s].[%n]

#   Next set of parameters is used by internal SQL parser that builds SQL
#   statements for one-click server sorting and filtering. They define how
#   your SQL dialect delimits comments and strings.
MultiLineCommentSymbols=/*,*/
OneLineCommentSymbols=--
StringDelimiter='

#   Next set of parameters is used when plugin builds CREATE TABLE... statements.
#   Do not use them for MS SQL Server.
#   Plugin uses direct call of MS SQL system stored procedures to build
#   CREATE TABLE... statements for MS SQL Server databases.
#DataTypeNames=
#UseANSIConversion=
#UseBuiltInConversion=


